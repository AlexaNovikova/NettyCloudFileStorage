Реализовано:

1) Интерфейс клиента на JavaFX, IO (взаимодействие с сервером).
2) Сервер на Netty.
3) Создан класс Command - для обмена сообщениями/командами между клиентом и сервером.
4) Файлы передаются в виде объектов - класс FileInBuffer.
5) Реализованы команды -
     LS ( одновременно просматривает файлы в текущей директории на сервере и клиенте),
     GET - получение файла с сервера,
     SEND - отправка файла на сервер,
     AUTH - авторизация ( пока без проверки данных),
6) При подключении к серверу каждому клиенту ( если у него нет директории) создается папка (имя совпадает с логином).

Вопросы:
1) Осталось непонятным как на сервере Netty создавать несколько обработчиков SimpleChannelInboundHandler,
для того, чтобы пересылать данные одновременно и в форме объектов, и в форме байтов?
В каком порядке их располагать в  socketChannel.pipeline().addLast ?
Если, например, передавать команды в форме объектов и байтбуфер(с файлом), и создать два обработчика, то как сделать,
чтобы каждый из них принимал на вход только нужные данные?
ObjectEncoder, ObjectDecoder также в этом случае идут первыми при добавлении в  socketChannel.pipeline()?