изким приоритетом могут прерывать обработку прерывания с более высоким приоритетом. Для реализации такой дисциплины необходимо не накладывать маски ни на один сигнал прерывания и не выключать систему прерываний. 
Отметим, что для правильной реализации последних двух дисциплин нужно обеспечить полное маскирование системы прерываний при выполнении шагов 1–4 и 6–7, чтобы не потерять запрос и правильно его обслужить. При этом многоуровневое прерывание должно происходить на этапе собственно обработки прерывания, а не на этапе перехода с одного процесса на другой.
Диспетчеризация прерываний является важной функцией ОС, которая реализована во всех мультипрограммных ОС. Можно заметить, что в общем случае в ОС реализуется двухуровневый механизм планирования работ. Верхний уровень планирования выполняется диспетчером прерываний, который распределяет процессорное время между потоком поступающих прерываний различных типов. Оставшееся процессорное время распределяется другим диспетчером – диспетчером потоков, на основании различных дисциплин, которые будут рассмотрены ниже.
Как мы видели на рассматриваемой ранее схеме, в обработке прерываний можно условно выделить три этапа. В мультипрограммной системе эти этапы будут выглядеть несколько иначе. Ниже приведена схема, иллюстрирующая эти различия.
На первом этапе при появлении запроса на прерывание идентификация сигнала выполняется специальным системным программным модулем, который называется супервизором (или диспетчером) прерываний. Он ненадолго запрещает все прерывания, сохраняет контекст прерываемого процесса и выясняет причину прерывания.
После этого диспетчер сравнивает назначенный данному источнику прерывания приоритет с текущим приоритетом потока команд, выполняемого процессором. В этот момент процессор уже может выполнять инструкции другого обработчика прерываний, также имеющего некоторый приоритет. В зависимости от приоритета нового запроса, его обработчик или помещается в очередь обработчиков, или (если его приоритет выше) он начинает работу, а выполнявшийся до этого обработчик приостанавливается и помещается в очередь (второй этап).
Замечание. Обработчик прерываний (независимо от его приоритета) всегда имеет приоритет более высокий, чем поток, выполняемый в обычной последовательности, определяемой планировщиком потоков.
После выполнения программы обработки прерывания управление снова передается супервизору (третий этап), на этот раз уже на тот модуль, который занимается диспетчеризацией задач. И уже диспетчер задач в соответствии с принятым режимом распределения процессорного времени восстановит контекст той задачи, которой решено будет выделить процессор.
Рассмотрим схему обработки прерываний в мультипрограммной системе и её отличия от рассмотренной ранее схемы.
Как видно, здесь нет возврата в прерванную ранее программу непосредственно из самой подпрограммы обработки прерывания. 
В конкретных процессорах и конкретных ОС могут существовать некоторые отклонения от рассмотренной схемы или дополнения к ней.
1.5.3	Контрольные вопросы
1.	Что такое прерывание? Когда оно было введено в действие и с какой целью?
2.	Из каких этапов состоит механизм обработки прерывания?
3.	Можно ли запретить все прерывания на время работы обработчика прерываний? Почему?
4.	К какому типу прерываний относятся прерывания клавиатуры? Прерывания таймера? Возникновение деления на ноль в ходе выполнения программы? Обращение к запрещённой странице памяти, занятой кодом ОС?
5.	Приведите примеры аппаратных прерываний.
6.	Могут ли в ходе нормальной работы программы возникать исключительные ситуации? Почему?
7.	Какие существуют способы реализации механизма аппаратных прерываний? В чём их различие?
8.	Что такое маскирование прерываний и для чего оно может применяться?
9.	Каким образом можно реализовывать различные дисциплины обслуживания прерываний с помощью маскирования?
10.	В чём различия между дисциплиной обслуживания прерываний с относительными приоритетами и с абсолютными?
11.	Где содержится информация об уровне приоритета текущего обработчика прерываний?
12.	Каковы функции супервизора прерываний?
13.	Чем отличается реализация механизма прерывания в мультипрограммной системе от однопрограммной системы?
14.	Когда происходит возврат к выполнявшейся до поступления сигнала прерывания программе в мультипрограммной системе?